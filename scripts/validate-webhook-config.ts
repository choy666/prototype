import { MercadoPagoConfig } from 'mercadopago';

// Script para validar la configuraci√≥n del webhook de Mercado Pago
async function validateWebhookConfig() {
  console.log('üîß Validando configuraci√≥n del webhook de Mercado Pago...\n');

  try {
    // Verificar variables de entorno
    console.log('1. Verificando variables de entorno...');

    const accessToken = process.env.MERCADO_PAGO_ACCESS_TOKEN;
    const notificationUrl = process.env.MERCADO_PAGO_NOTIFICATION_URL;

    console.log(`   - Access Token: ${accessToken ? '‚úÖ definido' : '‚ùå no definido'}`);
    console.log(`   - Notification URL: ${notificationUrl ? '‚úÖ definido' : '‚ùå no definido'}`);

    if (!accessToken || !notificationUrl) {
      console.log('\n‚ùå Variables de entorno faltantes. Configura:');
      console.log('   - MERCADO_PAGO_ACCESS_TOKEN');
      console.log('   - MERCADO_PAGO_NOTIFICATION_URL');
      return;
    }

    // Verificar formato de la URL
    console.log('\n2. Validando formato de URLs...');

    try {
      new URL(notificationUrl);
      console.log('   - Notification URL: ‚úÖ formato v√°lido');
    } catch (e) {
      console.log('   - Notification URL: ‚ùå formato inv√°lido');
    }

    // Verificar que sea HTTPS en producci√≥n
    const isProduction = process.env.NODE_ENV === 'production';
    if (isProduction && !notificationUrl.startsWith('https://')) {
      console.log('   ‚ö†Ô∏è  Advertencia: La URL debe ser HTTPS en producci√≥n');
    } else if (!isProduction) {
      console.log('   - Ambiente desarrollo: ‚úÖ HTTP permitido');
    }

    // Intentar inicializar cliente de Mercado Pago
    console.log('\n3. Probando conexi√≥n con Mercado Pago...');

    try {
      const client = new MercadoPagoConfig({ accessToken });
      console.log('   - Cliente Mercado Pago: ‚úÖ inicializado correctamente');
    } catch (error) {
      console.log('   - Cliente Mercado Pago: ‚ùå error de inicializaci√≥n');
      console.log('     Error:', error instanceof Error ? error.message : String(error));
    }

    // Verificar estructura del webhook endpoint
    console.log('\n4. Verificando estructura del endpoint del webhook...');

    const expectedEndpoint = '/api/webhooks/mercado-pago';
    console.log(`   - Endpoint esperado: ${expectedEndpoint}`);

    // Aqu√≠ se podr√≠a hacer una verificaci√≥n adicional si tuvi√©ramos acceso a la app corriendo

    console.log('\n5. Checklist de configuraci√≥n:');
    console.log('   ‚ñ° Acceder al dashboard de Mercado Pago');
    console.log('   ‚ñ° Ir a Configuraciones > Notificaciones');
    console.log('   ‚ñ° Crear nueva notificaci√≥n:');
    console.log('     - URL: https://tu-dominio.com/api/webhooks/mercado-pago');
    console.log('     - Eventos: payment.updated');
    console.log('   ‚ñ° Guardar y verificar que se reciba el ping de prueba');
    console.log('   ‚ñ° Verificar logs del servidor para confirmar recepci√≥n');

    console.log('\n6. URLs importantes:');
    console.log('   - Dashboard Mercado Pago: https://www.mercadopago.com.ar/developers/panel/app');
    console.log('   - Documentaci√≥n webhooks: https://www.mercadopago.com.ar/developers/es/guides/notifications/webhooks');

    console.log('\n‚úÖ Validaci√≥n de configuraci√≥n completada.');

  } catch (error) {
    console.error('‚ùå Error durante la validaci√≥n:', error);
  }
}

// Ejecutar validaci√≥n
validateWebhookConfig().catch(console.error);
